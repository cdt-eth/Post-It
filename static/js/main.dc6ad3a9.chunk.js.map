{"version":3,"sources":["pages/Create/Create.tsx","components/Post/Post.tsx","pages/Posts/Posts.tsx","components/Layout/Layout.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","field","marginTop","marginBottom","display","Create","useState","title","setTitle","titleError","setTitleError","description","setDescription","descriptionError","setDescriptionError","isDisabled","setIsDisabled","classes","handleSubmit","e","a","preventDefault","body","response","fetch","method","headers","JSON","stringify","console","log","err","error","useEffect","Container","Typography","variant","color","gutterBottom","noValidate","autoComplete","onSubmit","data-testid","TextField","onChange","target","value","className","label","fullWidth","required","inputProps","multiline","rows","Button","type","disabled","endIcon","theme","test","border","post","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","left","top","marginLeft","Post","handleDelete","handleEdit","open","currentPost","updatedTitle","updatedDescription","setUpdatedTitle","setUpdatedDescription","setOpen","Card","elevation","CardHeader","action","IconButton","onClick","post_id","DeleteOutlined","CardContent","Modal","onClose","Posts","posts","setPosts","setCurrentPost","then","res","json","data","id","newPosts","filter","breakpointCols","default","1100","700","columnClassName","map","root","page","drawer","drawerPaper","active","appbar","toolbar","mixins","date","flexGrow","avatar","Layout","children","history","useHistory","location","useLocation","menu","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","Toolbar","format","Date","Avatar","src","Drawer","anchor","List","item","ListItem","button","push","pathname","ListItemIcon","ListItemText","primary","myTheme","createTheme","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc6ad3a9.chunk.js","sourcesContent":["import { useState, ReactElement, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  Button,\n  Container,\n  TextField,\n} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\n\nconst useStyles = makeStyles({\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n});\n\nconst Create = (): ReactElement => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [description, setDescription] = useState<string>(\"\");\n  const [descriptionError, setDescriptionError] = useState<boolean>(false);\n  const [isDisabled, setIsDisabled] = useState<boolean>(true);\n  const classes = useStyles();\n\n  const handleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    setTitleError(false);\n    setDescriptionError(false);\n\n    if (title === \"\") setTitleError(true);\n    if (description === \"\") setDescriptionError(true);\n\n    if (title && description) {\n      try {\n        const body = { title, description };\n        const response = fetch(\"http://localhost:5000/posts\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        });\n\n        setTitle(\"\");\n        setDescription(\"\");\n        console.log(\"response\", response);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (title && description) setIsDisabled(false);\n  }, [title, description]);\n\n  return (\n    <Container>\n      <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n        Create a new note\n      </Typography>\n\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        data-testid=\"form\"\n      >\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          className={classes.field}\n          label=\"Title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          value={title}\n          required\n          inputProps={{ \"data-testid\": \"title\" }}\n          error={titleError}\n        />\n        <TextField\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className={classes.field}\n          label=\"Description\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          inputProps={{ \"data-testid\": \"description\" }}\n          error={descriptionError}\n        />\n\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"contained\"\n          disabled={isDisabled}\n          data-testid=\"submit-button\"\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default Create;\n","import {\n  Card,\n  CardContent,\n  CardHeader,\n  Modal,\n  IconButton,\n  makeStyles,\n  Typography,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { DeleteOutlined } from \"@material-ui/icons\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { ReactElement, useEffect } from \"react\";\nimport { IPosts } from \"../../pages/Posts/Posts\";\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\n\ninterface PostData {\n  post: IPosts;\n  handleEdit: (post: IPosts) => void;\n  handleDelete: (id: number) => void;\n  handleSubmit: any;\n  title?: string;\n  open: boolean;\n  setOpen: any;\n  updatedTitle: string;\n  updatedDescription: string;\n  setUpdatedTitle: any;\n  setUpdatedDescription: any;\n  currentPost: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  test: {\n    border: (post: IPosts) => {\n      if (post.title == null) {\n        return \"1px solid red\";\n      }\n    },\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    left: \"50%\",\n    top: \"50%\",\n    marginLeft: \"-150px\",\n    marginTop: \"-150px\",\n  },\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: \"block\",\n  },\n}));\n\nconst Post = ({\n  post,\n  handleDelete,\n  handleEdit,\n  open,\n  currentPost,\n  updatedTitle,\n  updatedDescription,\n  handleSubmit,\n  setUpdatedTitle,\n  setUpdatedDescription,\n  setOpen,\n}: PostData): ReactElement => {\n  const classes = useStyles(post);\n\n  useEffect(() => {\n    console.log(\"title:\", updatedTitle);\n    console.log(\"descr:\", updatedDescription);\n  }, [updatedTitle, updatedDescription]);\n\n  const body = (\n    <div className={classes.paper}>\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        data-testid=\"form\"\n      >\n        <TextField\n          onChange={(e) => setUpdatedTitle(e.target.value)}\n          className={classes.field}\n          label=\"Title\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          value={currentPost && updatedTitle}\n          required\n          inputProps={{ \"data-testid\": \"title\" }}\n        />\n        <TextField\n          value={currentPost && updatedDescription}\n          onChange={(e) => setUpdatedDescription(e.target.value)}\n          className={classes.field}\n          label=\"Description\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          multiline\n          rows={4}\n          fullWidth\n          required\n          inputProps={{ \"data-testid\": \"description\" }}\n        />\n\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          variant=\"contained\"\n          // disabled={isDisabled}\n          data-testid=\"submit-button\"\n          endIcon={<KeyboardArrowRightIcon />}\n        >\n          Udpate\n        </Button>\n      </form>\n    </div>\n  );\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card elevation={3} className={classes.test}>\n        <CardHeader\n          color=\"textSecondary\"\n          action={\n            <>\n              <IconButton onClick={() => handleEdit(post)}>\n                <EditOutlinedIcon />\n              </IconButton>\n              <IconButton onClick={() => handleDelete(post.post_id)}>\n                <DeleteOutlined />\n              </IconButton>\n            </>\n          }\n          title={post.title ? post.title : \"no title\"}\n        ></CardHeader>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {post.description}\n          </Typography>\n        </CardContent>\n      </Card>\n      <Modal open={open} onClose={handleClose}>\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default Post;\n","import { useState, useEffect, ReactElement } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Post from \"../../components/Post/Post\";\nimport Masonry from \"react-masonry-css\";\n\nexport interface IPosts {\n  post_id: number;\n  title: string;\n  description: string;\n}\n\nconst Posts = (): ReactElement => {\n  const [posts, setPosts] = useState<IPosts[]>([]);\n  const [open, setOpen] = useState<boolean>(false);\n  const [currentPost, setCurrentPost] = useState<any>();\n  const [updatedTitle, setUpdatedTitle] = useState<string>(\"\");\n  const [updatedDescription, setUpdatedDescription] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/posts\")\n      .then((res) => res.json())\n      .then((data) => setPosts(data));\n  }, [posts]);\n\n  const handleEdit = async (post: IPosts) => {\n    console.log(\"post\", post);\n    setCurrentPost(post);\n    setUpdatedTitle(post.title);\n    setUpdatedDescription(post.description);\n    setOpen(true);\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n\n    console.log(\"UPDATE:\", updatedTitle, \" | \", updatedDescription);\n\n    setOpen(false);\n\n    await fetch(\"http://localhost:5000/posts/\" + currentPost.post_id, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        title: updatedTitle,\n        description: updatedDescription,\n      }),\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    await fetch(\"http://localhost:5000/posts/\" + id, {\n      method: \"DELETE\",\n    });\n\n    const newPosts = posts.filter((post) => post.post_id !== id);\n    setPosts(newPosts);\n  };\n\n  const breakpoints = {\n    default: 3,\n    1100: 2,\n    700: 1,\n  };\n\n  return (\n    <Container>\n      <Masonry\n        breakpointCols={breakpoints}\n        className=\"my-masonry-grid\"\n        columnClassName=\"my-masonry-grid_column\"\n      >\n        {posts.map((post) => (\n          <div key={post.post_id}>\n            <Post\n              post={post}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n              handleSubmit={handleSubmit}\n              setUpdatedTitle={setUpdatedTitle}\n              setUpdatedDescription={setUpdatedDescription}\n              open={open}\n              currentPost={currentPost}\n              updatedTitle={updatedTitle}\n              updatedDescription={updatedDescription}\n              setOpen={setOpen}\n            />\n          </div>\n        ))}\n      </Masonry>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import { ReactElement } from \"react\";\nimport {\n  Drawer,\n  makeStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  AppBar,\n  Toolbar,\n  Avatar,\n} from \"@material-ui/core\";\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { format } from \"date-fns\";\n\ntype Children = {\n  children: JSX.Element;\n};\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      display: \"flex\",\n    },\n    page: {\n      background: \"#f9f9f9\",\n      width: \"100%\",\n      padding: theme.spacing(3),\n    },\n    drawer: {\n      width: drawerWidth,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    title: {\n      padding: theme.spacing(2),\n    },\n    appbar: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    toolbar: theme.mixins.toolbar,\n    date: {\n      flexGrow: 1,\n    },\n    avatar: {\n      marginLeft: theme.spacing(2),\n    },\n  };\n});\n\nconst Layout = ({ children }: Children): ReactElement => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const menu = [\n    {\n      text: \"My Posts\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/Post-It\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/Post-It/create\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      {/* App Bar */}\n      <AppBar className={classes.appbar} elevation={0}>\n        <Toolbar>\n          <Typography className={classes.date}>\n            Today is {format(new Date(), `MMMM do, Y`)}\n          </Typography>\n          <Typography>Christian</Typography>\n          <Avatar src=\"/me.jpg\" className={classes.avatar} />\n        </Toolbar>\n      </AppBar>\n\n      {/* Side Bar */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"left\"\n        classes={{ paper: classes.drawerPaper }}\n      >\n        <div>\n          <Typography variant=\"h5\" className={classes.title}>\n            Post it!\n          </Typography>\n        </div>\n\n        {/* Menu Links */}\n        <List>\n          {menu.map((item) => (\n            <ListItem\n              key={item.text}\n              button\n              onClick={() => history.push(item.path)}\n              className={location.pathname === item.path ? classes.active : \"\"}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.text}></ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      {/* Main Content */}\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n};\nexport default Layout;\n","import { ReactElement } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Create from \"./pages/Create/Create\";\nimport Posts from \"./pages/Posts/Posts\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { purple } from \"@material-ui/core/colors\";\nimport Layout from \"./components/Layout/Layout\";\n\nconst myTheme = createTheme({\n  palette: {\n    primary: {\n      main: \"#fefefe\",\n    },\n    secondary: purple,\n  },\n  typography: {\n    fontFamily: \"Lato\",\n    fontWeightLight: 100,\n    fontWeightRegular: 300,\n    fontWeightMedium: 400,\n    fontWeightBold: 700,\n  },\n});\n\nconst App = (): ReactElement => {\n  return (\n    <ThemeProvider theme={myTheme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/Post-It\">\n              <Posts />\n            </Route>\n            <Route path=\"/Post-It/create\">\n              <Create />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}